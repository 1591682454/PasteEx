<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tabPageNomal.Text" xml:space="preserve">
    <value>常規</value>
  </data>
  <data name="tabPageCustom.Text" xml:space="preserve">
    <value>自定義</value>
  </data>
  <data name="tabPageMode.Text" xml:space="preserve">
    <value>監聽模式</value>
  </data>
  <data name="tabPageAbout.Text" xml:space="preserve">
    <value>關於</value>
  </data>
  <data name="groupBox6.Text" xml:space="preserve">
    <value>文件命名</value>
  </data>
  <data name="picHelpFileNamePattern.ToolTip" xml:space="preserve">
    <value>點擊查看日期格式化語法</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblFileNamePreview.Size" type="System.Drawing.Size, System.Drawing">
    <value>35, 12</value>
  </data>
  <data name="lblFileNamePreview.Text" xml:space="preserve">
    <value>預覽:</value>
  </data>
  <data name="lblFileNamePattern.Size" type="System.Drawing.Size, System.Drawing">
    <value>35, 12</value>
  </data>
  <data name="lblFileNamePattern.Text" xml:space="preserve">
    <value>規則:</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>界面</value>
  </data>
  <data name="cboLanguage.Location" type="System.Drawing.Point, System.Drawing">
    <value>62, 23</value>
  </data>
  <data name="labelLanguage.Size" type="System.Drawing.Size, System.Drawing">
    <value>35, 12</value>
  </data>
  <data name="labelLanguage.Text" xml:space="preserve">
    <value>語言:</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>快速粘貼右鍵菜單</value>
  </data>
  <data name="chkFastNeedShiftKey.Size" type="System.Drawing.Size, System.Drawing">
    <value>138, 16</value>
  </data>
  <data name="chkFastNeedShiftKey.Text" xml:space="preserve">
    <value>按住 Shift 顯示菜單</value>
  </data>
  <data name="btnFastUnRegister.Text" xml:space="preserve">
    <value>移除</value>
  </data>
  <data name="btnFastRegister.Text" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>右鍵菜單</value>
  </data>
  <data name="chkNeedShiftKey.Size" type="System.Drawing.Size, System.Drawing">
    <value>138, 16</value>
  </data>
  <data name="chkNeedShiftKey.Text" xml:space="preserve">
    <value>按住 Shift 顯示菜單</value>
  </data>
  <data name="btnUnRegister.Text" xml:space="preserve">
    <value>移除</value>
  </data>
  <data name="btnRegister.Text" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="chkAutoExtSwitch.Size" type="System.Drawing.Size, System.Drawing">
    <value>108, 16</value>
  </data>
  <data name="chkAutoExtSwitch.Text" xml:space="preserve">
    <value>文本副檔名規則</value>
  </data>
  <data name="picHelpTextExtRules.ToolTip" xml:space="preserve">
    <value>規則格式：副檔名=與此副檔名相對應文本的第壹行特征（支持正則）

對於文本類型的文件，將會取第壹個非空行對特征進行匹配，
匹配成功則在保存時默認使用對應的自定義副檔名。

比如：
    cs=^using .*;$
    java=^package.*;$
    html=(? i)&lt;!DOCTYPE html
    cpp=^#include.*</value>
  </data>
  <data name="lblTipError.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 12</value>
  </data>
  <data name="lblTipError.Text" xml:space="preserve">
    <value>規則格式有誤，將不被啟用</value>
  </data>
  <data name="picHelpAutoSave.ToolTip" xml:space="preserve">
    <value>自動把復制過的圖片保存到該文件夾</value>
  </data>
  <data name="btnOpenAutoSavePath.Text" xml:space="preserve">
    <value>打開</value>
  </data>
  <data name="chkAutoSave.Size" type="System.Drawing.Size, System.Drawing">
    <value>72, 16</value>
  </data>
  <data name="chkAutoSave.Text" xml:space="preserve">
    <value>自動保存</value>
  </data>
  <data name="btnChangeAutoSavePathDialog.Text" xml:space="preserve">
    <value>更改</value>
  </data>
  <data name="lblAutoSaveFolderPath.Text" xml:space="preserve">
    <value>文件夾:</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>快捷鍵</value>
  </data>
  <data name="lblQuickPasteExHotkey.Size" type="System.Drawing.Size, System.Drawing">
    <value>59, 12</value>
  </data>
  <data name="lblQuickPasteExHotkey.Text" xml:space="preserve">
    <value>快速粘貼:</value>
  </data>
  <data name="labelUpdateinfo.Text" xml:space="preserve">
    <value>已經是最新版本</value>
  </data>
  <data name="linkLabel1.Text" xml:space="preserve">
    <value>PasteEx

版本：{0}

作者：huiyadanli

如果有問題或者建議，歡迎在 GitHub 上面給我提 Issues，或者發送郵件到 huiyadanli@126.com</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>Inherit</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>設置</value>
  </data>
</root>